# ==========================================
# Vietnam House - Nginx Configuration
# Optimized for React + Vite SPA
# ==========================================

# Worker processes (auto = number of CPU cores)
worker_processes auto;

# Error log
error_log /var/log/nginx/error.log warn;

# PID file
pid /var/run/nginx.pid;

# Worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ============ Basic Settings ============
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # ============ Gzip Compression ============
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/xml
        application/x-javascript
        image/svg+xml;
    gzip_disable "msie6";

    # ============ Server Block ============
    server {
        listen 80;
        listen [::]:80;

        # Server name (not critical since Traefik handles routing)
        server_name _;

        # Document root
        root /usr/share/nginx/html;
        index index.html;

        # Character encoding
        charset utf-8;

        # ============ Security Headers ============
        # These are also set in docker-compose.yml Traefik labels
        # Keeping them here as defense-in-depth
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # ============ React Router / SPA Configuration ============
        # Try to serve file directly, fallback to index.html for client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # ============ Static Assets Caching ============
        # Cache CSS, JS, and other static assets for 1 year
        location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot|otf|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # ============ HTML Files Caching ============
        # Cache HTML files for 1 hour to allow for quick updates
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # ============ Disable Caching for Service Worker ============
        # If you add a service worker in the future
        location ~* (service-worker\.js|sw\.js)$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }

        # ============ Health Check Endpoint ============
        # Used by Docker healthcheck
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ============ Deny Access to Hidden Files ============
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ============ Deny Access to package.json, etc. ============
        location ~* (package\.json|package-lock\.json|yarn\.lock|\.git)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ============ Error Pages ============
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
